<?xml version="1.0"?>
<!--
	@url https://pear.php.net/manual/en/package.php.php-codesniffer.annotated-ruleset.php
	@url https://github.com/klaussilveira/phpcs-psr/blob/master/ruleset.xml
	@url https://forge.typo3.org/projects/team-forge/wiki/The_sniffs_with_code_examples
	@url http://pear.php.net/package/PHP_CodeSniffer/docs/latest/PHP_CodeSniffer/PEAR_Sniffs_Commenting_InlineCommentSniff.html
	@see /usr/lib/php/PHP/CodeSniffer/Standards
-->
<ruleset name="phpcs">
	<description>Standards de codage pour le plugin Validation2.</description>
		<!-- Règles de base, quasiment indiscpensables -->
		<rule ref="Generic.CodeAnalysis.EmptyStatement"/> <!-- performances, logique -->
		<rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/> <!-- logique -->
		<rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/> <!-- performances -->
		<rule ref="Generic.CodeAnalysis.JumbledIncrementer"/> <!-- logique -->
		<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/> <!-- logique -->
		<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/> <!-- logique (parent) -->
		<rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/> <!-- performances, logique -->
		<rule ref="Generic.Files.ByteOrderMark"/> <!-- éviter de casser ? -->
		<rule ref="Generic.Functions.CallTimePassByReference"/> <!-- éviter de casser ? -->
		<rule ref="Generic.NamingConventions.ConstructorName"/> <!-- éviter de casser ? -->
		<rule ref="Generic.PHP.DeprecatedFunctions"/> <!-- éviter de casser ? -->
		<rule ref="Generic.PHP.DisallowShortOpenTag"/> <!-- éviter de casser ? -->
		<rule ref="Generic.PHP.ForbiddenFunctions"/> <!-- éviter de casser ? -->
		<rule ref="Generic.PHP.NoSilencedErrors"/> <!-- éviter de casser ? -->
		<rule ref="Generic.PHP.SAPIUsage"/> <!-- éviter de casser ? -->
		<rule ref="Generic.Strings.UnnecessaryStringConcat"/> <!-- performances -->
		<rule ref="PEAR.Files.IncludingFile"/> <!-- standard PHP -->
		<rule ref="PEAR.Functions.ValidDefaultValue"/> <!-- éviter de casser ? -->
		<rule ref="Squiz.Classes.LowercaseClassKeywords"/> <!-- standard PHP -->
		<rule ref="Squiz.Classes.SelfMemberReference"/> <!-- standard PHP -->
		<rule ref="Squiz.Commenting.FunctionCommentThrowTag"/> <!-- pas fait par phpdocumentor ? + FIXME/TODO -->
		<rule ref="Squiz.ControlStructures.LowercaseDeclaration"/> <!-- standard PHP -->
		<rule ref="Squiz.Functions.FunctionDuplicateArgument"/> <!-- standard PHP -->
		<rule ref="Squiz.Functions.LowercaseFunctionKeywords"/> <!-- standard PHP -->
		<rule ref="Squiz.Scope.StaticThisUsage"/> <!-- éviter de casser ? -->
		<rule ref="Squiz.Strings.EchoedStrings"/> <!-- standard PHP -->
		<rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/> <!-- éviter de casser ? -->
		<rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing"/> <!-- standard PHP -->

	<!-- Règles plus personnelles -->
	<rule ref="Generic.Commenting.Fixme"/>
	<rule ref="Generic.Commenting.Todo"/>

	<rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>
	<rule ref="Generic.Formatting.DisallowMultipleStatements"/>
	<rule ref="Generic.Formatting.NoSpaceAfterCast"/>
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
	<rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
	<rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
	<rule ref="Generic.PHP.LowerCaseConstant"/>
	<rule ref="Generic.PHP.LowerCaseKeyword"/>
	<rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

	<rule ref="Squiz.Arrays.ArrayBracketSpacing"/>

	<rule ref="Squiz.Scope.MemberVarScope"/>
	<rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Classes.ValidClassName"/>

	<!-- All rules in ./Sniffs are included automatically -->
</ruleset>
